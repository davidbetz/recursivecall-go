version: '3'
services:
  a:
    image: davidbetz/recursivecall-go
    deploy:
        replicas: 3
    environment:
      - PROCS=1
    networks:
      - recursivecallnet

  b:
    image: davidbetz/recursivecall-go
    healthcheck:
      test: ["CMD", "./recursivecall", "check", "a"]
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - PROCS=1
    deploy:
        replicas: 3
    networks:
      - recursivecallnet
      
  c:
    image: davidbetz/recursivecall-go
    healthcheck:
      test: ["CMD", "./recursivecall", "check", "b"]
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - PROCS=1
    deploy:
        replicas: 3
    networks:
      - recursivecallnet
      
  d:
    image: davidbetz/recursivecall-go
    healthcheck:
      test: ["CMD", "./recursivecall", "check", "c"]
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - PROCS=1
    deploy:
        replicas: 3
    networks:
      - recursivecallnet
      
  e:
    image: davidbetz/recursivecall-go
    healthcheck:
      test: ["CMD", "./recursivecall", "check", "d"]
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - PROCS=1
    deploy:
        replicas: 3
    networks:
      - recursivecallnet
      
  f:
    image: davidbetz/recursivecall-go
    healthcheck:
      test: ["CMD", "./recursivecall", "check", "e"]
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - PROCS=1
    deploy:
        replicas: 3
    networks:
      - recursivecallnet
      
  g:
    image: davidbetz/recursivecall-go
    healthcheck:
      test: ["CMD", "./recursivecall", "check", "f"]
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - PROCS=1
    deploy:
        replicas: 3
    networks:
      - recursivecallnet
    ports:
      - "3000:3000"

networks:
  recursivecallnet:
    driver: overlay
    driver_opts:
      encrypted: ""
